<UserControl x:Class="SteamControllerTest.Views.TouchpadActionPropControls.TouchpadActionPadPropControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SteamControllerTest.Views.TouchpadActionPropControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="boolVisConv" />
    </UserControl.Resources>
    <DockPanel>
        <StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                <Label Content="Name" />
                <TextBox Text="{Binding Name,UpdateSourceTrigger=LostFocus}" Width="200" Margin="8,0,0,0" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                <Label Content="DPad Mode" />
                <ComboBox ItemsSource="{Binding PadModeItems}" SelectedIndex="{Binding SelectedPadModeIndex}" DisplayMemberPath="DisplayName" Width="200" Margin="8,0,0,0">
                    <ComboBox.Style>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxBaseStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HighlightPadModeChanged}" Value="False">
                                    <Setter Property="Opacity" Value="0.7" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
            </StackPanel>

            <StackPanel Orientation="Horizontal" MinHeight="80" Margin="0,12,0,0">
                <Label Content="Bindings" />
                <Grid Width="200" Margin="8,0,0,0" Visibility="{Binding ShowCardinalPad, FallbackValue='Visible', Converter={StaticResource boolVisConv}}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Button x:Name="btnUpEdit" Content="{Binding ActionUpBtnDisplayBind,Mode=OneWay,FallbackValue='Test Up'}" Click="btnUpEdit_Click" MinWidth="60" />
                    <Button x:Name="btnDownEdit" Content="{Binding ActionDownBtnDisplayBind,Mode=OneWay,FallbackValue='Test Down'}" Click="btnDownEdit_Click" Margin="20,0,0,0" MinWidth="60" Grid.Column="1" />
                    <Button x:Name="btnLeftEdit" Content="{Binding ActionLeftBtnDisplayBind,Mode=OneWay,FallbackValue='Test Left'}" Click="btnLeftEdit_Click" Margin="0,12,0,0" MinWidth="60" Grid.Row="1" Grid.Column="0" />
                    <Button x:Name="btnRightEdit" Content="{Binding ActionRightBtnDisplayBind,Mode=OneWay,FallbackValue='Test Right'}" Click="btnRightEdit_Click" Margin="20,12,0,0" MinWidth="60" Grid.Row="1" Grid.Column="1" />
                </Grid>

                <Grid Width="200" Margin="8,0,0,0" Visibility="{Binding ShowDiagonalPad, FallbackValue='Collapsed', Converter={StaticResource boolVisConv}}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Button x:Name="btnUpLeftEdit" Content="{Binding ActionUpLeftBtnDisplayBind,Mode=OneWay,FallbackValue='Test UpLeft'}" Click="btnUpLeftEdit_Click" MinWidth="60" />
                    <Button x:Name="btnUpRightEdit" Content="{Binding ActionUpRightBtnDisplayBind,Mode=OneWay,FallbackValue='Test UpRight'}" Click="btnUpRightEdit_Click" Margin="20,0,0,0" MinWidth="60" Grid.Column="1" />
                    <Button x:Name="btnDownLeftEdit" Content="{Binding ActionDownLeftBtnDisplayBind,Mode=OneWay,FallbackValue='Test DownLeft'}" Click="btnDownLeftEdit_Click" Margin="0,12,0,0" MinWidth="60" Grid.Row="1" Grid.Column="0" />
                    <Button x:Name="btnDownRightEdit" Content="{Binding ActionDownRightBtnDisplayBind,Mode=OneWay,FallbackValue='Test DownRight'}" Click="btnDownRightEdit_Click" Margin="20,12,0,0" MinWidth="60" Grid.Row="1" Grid.Column="1" />
                </Grid>

            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                <Label Content="Requires Click" />
                <CheckBox IsChecked="{Binding RequiresClick}" Width="20" VerticalAlignment="Center" Margin="8,0,0,0">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxBaseStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HighlightRequiresClick}" Value="False">
                                    <Setter Property="Opacity" Value="0.7" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
            </StackPanel>
            
            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                <Label Content="Dead Zone" />
                <TextBox Text="{Binding DeadZone, UpdateSourceTrigger=LostFocus}" Width="100" Margin="8,0,0,0">
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HighlightDeadZone}" Value="False">
                                    <Setter Property="Opacity" Value="0.7" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                <Label Content="Diagonal Range" />
                <TextBox Text="{Binding DiagonalRange, UpdateSourceTrigger=LostFocus}" Width="100" Margin="8,0,0,0">
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HighlightDiagonalRange}" Value="False">
                                    <Setter Property="Opacity" Value="0.7" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </StackPanel>

        </StackPanel>
    </DockPanel>
</UserControl>

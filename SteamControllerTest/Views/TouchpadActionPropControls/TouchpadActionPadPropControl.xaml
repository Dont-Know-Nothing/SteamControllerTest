<UserControl x:Class="SteamControllerTest.Views.TouchpadActionPropControls.TouchpadActionPadPropControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SteamControllerTest.Views.TouchpadActionPropControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="boolVisConv" />
    </UserControl.Resources>
    <DockPanel>
        <StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                <Label Content="Name" />
                <TextBox Text="{Binding Name,UpdateSourceTrigger=LostFocus}" Width="200" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0,12,0,0">
                <Label Content="DPad Mode" />
                <ComboBox ItemsSource="{Binding PadModeItems}" SelectedIndex="{Binding SelectedPadModeIndex}" DisplayMemberPath="DisplayName" Width="200">
                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HighlightPadModeChanged}" Value="False">
                                    <Setter Property="Opacity" Value="0.7" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
            </StackPanel>

            <StackPanel Orientation="Horizontal" MinHeight="80" Margin="0,12,0,0">
                <Label Content="Bindings" />
                <WrapPanel Orientation="Horizontal" Width="150" Margin="8,0,0,0" Visibility="{Binding ShowCardinalPad, FallbackValue='Visible', Converter={StaticResource boolVisConv}}">
                    <Button x:Name="btnUpEdit" Content="Test Up" Click="btnUpEdit_Click" MinWidth="60" />
                    <Button x:Name="btnDownEdit" Content="Test Down" Click="btnDownEdit_Click" Margin="20,0,0,0" MinWidth="60" />
                    <Button x:Name="btnLeftEdit" Content="Test Left" Click="btnLeftEdit_Click" Margin="0,12,0,0" MinWidth="60" />
                    <Button x:Name="btnRightEdit" Content="Test Right" Click="btnRightEdit_Click" Margin="20,12,0,0" MinWidth="60" />
                </WrapPanel>

                <WrapPanel Orientation="Horizontal" Width="200" Margin="8,0,0,0" Visibility="{Binding ShowDiagonalPad, FallbackValue='Collapsed', Converter={StaticResource boolVisConv}}">
                    <Button x:Name="btnUpLeftEdit" Content="Test UpLeft" Click="btnUpLeftEdit_Click" MinWidth="60" />
                    <Button x:Name="btnUpRightEdit" Content="Test UpRight" Click="btnUpRightEdit_Click" Margin="20,0,0,0" MinWidth="60" />
                    <Button x:Name="btnDownLeftEdit" Content="Test DownLeft" Click="btnDownLeftEdit_Click" Margin="0,12,0,0" MinWidth="60" />
                    <Button x:Name="btnDownRightEdit" Content="Test DownRight" Click="btnDownRightEdit_Click" Margin="20,12,0,0" MinWidth="60" />
                </WrapPanel>

            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                <Label Content="Requires Click" />
                <CheckBox IsChecked="{Binding RequiresClick}" Width="20" VerticalAlignment="Center" Margin="8,0,0,0">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HighlightRequiresClick}" Value="False">
                                    <Setter Property="Opacity" Value="0.7" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
            </StackPanel>
            
            <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                <Label Content="Dead Zone" />
                <TextBox Text="{Binding DeadZone, UpdateSourceTrigger=LostFocus}" Width="100" Margin="8,0,0,0">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HighlightDeadZone}" Value="False">
                                    <Setter Property="Opacity" Value="0.7" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="0,12,0,0">
                <Label Content="Diagonal Range" />
                <TextBox Text="{Binding DiagonalRange, UpdateSourceTrigger=LostFocus}" Width="100" Margin="8,0,0,0">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HighlightDiagonalRange}" Value="False">
                                    <Setter Property="Opacity" Value="0.7" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </StackPanel>

        </StackPanel>
    </DockPanel>
</UserControl>
